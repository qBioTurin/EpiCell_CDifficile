

--------------------------------------------------------------------
                      Generation ODE/SDE model
--------------------------------------------------------------------


#Computing p-semiflows and place bounds: 

Place invariants for net /home/EpitCellDifficile:

   IECs   Damage

Only 2 places out of 18 are covered by some P-invariant.

The following places are not covered by any P-invariant:

 pheme_e BiomassCD pro_L_e leu_L_e ile_L_e val_L_e trp_L_e cys_L_e Drug OxiStress pro_L_v leu_L_v ile_L_v val_L_v trp_L_v cys_L_v

/usr/local/GreatSPN/bin/PN2ODE /home/EpitCellDifficile -M


 =========================================================
|	      	        PN to ODE        	          |
 =========================================================

 If you find any bug, send an email to beccuti@di.unito.it!
Transition EX_pheme_e_in has function:  FN:FBA

Transition EX_pro_L_e has function:  FN:FBA

Transition EX_biomass_e_out has function:  FN:FBA

Transition EX_val_L_e_in has function:  FN:FBA

Transition EX_ile_L_e_in has function:  FN:FBA

Transition EX_leu_L_e_out has function:  FN:FBA

Transition EX_cys_L_e_in has function:  FN:FBA

Transition EX_trp_L_e_in has function:  FN:FBA

Transition EX_pheme_e_out has function:  FN:FBA

Transition EX_cys_L_e_out has function:  FN:FBA

Transition EX_trp_L_e_out has function:  FN:FBA

Transition EX_val_L_e_out has function:  FN:FBA

Transition EX_ile_L_e_out has function:  FN:FBA

Transition EX_leu_L_e_in has function:  FN:FBA

Transition EX_biomass_e_in has function:  FN:FBA



------------------------------------------------
               Start  encoding
------------------------------------------------

Opening file: /home/EpitCellDifficile.bnd
Opening file: /home/EpitCellDifficile.pin
Number of P-invs: 1

	P-invariant: 
	 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 | 0
	
	U
	 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 | 0
	
	L
	 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	
	P
	 0

START EXECUTION...
FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

FN:FBA

	Done.

------------------------------------------------
                 End encoding
------------------------------------------------


===================== INFO =====================
 Total Time: 0.003223 sec
 Total Used Memory: 3744KB
 Output saved in: EpitCellDifficile.cpp
================================================

PN2ODE solution
/home/EpitCellDifficile
#cd /usr/local/GreatSPN/scripts/../inst_src
#Copying file form /usr/local/GreatSPN/scripts/../inst_src to /tmp/tmp.hC2poGFKpP

#cat /tmp/tmp.hC2poGFKpP/tmpB  /home/TransitionGeneral.cpp  /tmp/tmp.hC2poGFKpP/tmpE >> /tmp/tmp.hC2poGFKpP/tmpA
FuncT
#cat /tmp/tmp.hC2poGFKpP/tmpA >>  /tmp/tmp.hC2poGFKpP/class.cpp

#cd /tmp/tmp.hC2poGFKpP

#Compiling ... 
g++ -D CGLPK -I./  -o  /home/EpitCellDifficile.solver  /home/EpitCellDifficile.cpp  ./class.cpp  ./lsode.cpp ./GLPKsolve.cpp ./general.cpp -O3 -std=c++11 -lm -Wall -lglpk
./class.cpp: In function 'void SDE::read_map_string_double(std::string, std::unordered_map<std::__cxx11::basic_string<char>, double>&)':
./class.cpp:3886:120: error: no matching function for call to 'std::pair<std::__cxx11::basic_string<char>, double>::pair(double, double)'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: 'template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'std::tuple<_Tps ...>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: 'template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'std::tuple<_Tps ...>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'std::pair<_T1, _T2>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'std::pair<_T1, _T2>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:360:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  360 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:351:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  351 |                          bool>::type=true>
      |                                      ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: 'template<class _U2, typename std::enable_if<_CopyMovePair<false, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:342:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  342 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: 'template<class _U2, typename std::enable_if<_CopyMovePair<true, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
./class.cpp:3886:66: note:   cannot convert 'std::__cxx11::stod(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int](0, pos), 0)' (type 'double') to type 'const std::__cxx11::basic_string<char>&'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                              ~~~~^~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: 'template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, double>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:328:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  328 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: 'template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, double>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:321:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  321 |                          bool>::type=true>
      |                                      ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'const std::pair<_T1, _T2>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<double, _U2>::value)), std::__cxx11::basic_string<char>, double>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   mismatched types 'const std::pair<_T1, _T2>' and 'double'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:275:38: error: no type named 'type' in 'struct std::enable_if<false, bool>'
  275 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
./class.cpp:3886:66: note:   cannot convert 'std::__cxx11::stod(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::substr(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int](0, pos), 0)' (type 'double') to type 'const std::__cxx11::basic_string<char>&'
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                              ~~~~^~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   candidate expects 0 arguments, 2 provided
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: 'template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
./class.cpp:3886:120: note:   candidate expects 0 arguments, 2 provided
 3886 |                                 m.insert(pair<string,double>(stod(line.substr(0,pos)) , stod(line.substr(pos+1,length))) );
      |                                                                                                                        ^
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/char_traits.h:39,
                 from /usr/include/c++/11/ios:40,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from ./GLPKsolve.hpp:32,
                 from ./class.cpp:24:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: 'std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: 'std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = std::__cxx11::basic_string<char>; _T2 = double]'
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
./class.cpp: In function 'double SDE::FBA(double*, std::map<std::__cxx11::basic_string<char>, int>&, std::map<std::__cxx11::basic_string<char>, int>&, const std::vector<std::__cxx11::basic_string<char> >&, const SDE::InfTr*, int, const double&)':
./class.cpp:3989:40: error: no match for 'operator[]' (operand types are 'double*' and 'std::map<std::__cxx11::basic_string<char>, int>::iterator' {aka 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, int>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, int> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, int> > >::iterator'})
 3989 |                         int Met = Value[NumPlaces.find("place name")] -> second;
      |                                        ^
./class.cpp:3992:25: error: expected ',' or ';' before 'double'
 3992 |                         double Ub = l.getUpBounds(index);
      |                         ^~~~~~
./class.cpp:3994:62: error: 'Ub' was not declared in this scope; did you mean 'Lb'?
 3994 |                         l.update_bound(index, TypeBound, Lb, Ub);
      |                                                              ^~
      |                                                              Lb
make: *** [makefile:31: fluxb] Error 1
#Error during compilation. 


